import { useState, useEffect } from 'react';
import styled from 'styled-components';
import Image from 'next/image';
import footerBCG from '../../public/assets/footer-bcg.png';
import Link from 'next/link';
import { toast } from 'react-toastify';
import pattern from '../../public/assets/discover-daos/pattern.png'

let socialMediaIcons = [
  <svg key={1} width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M31.5242 6.58244C30.4108 7.07578 29.2148 7.40911 27.9575 7.55978C29.2548 6.7835 30.2254 5.56173 30.6882 4.12244C29.4693 4.84643 28.1353 5.35604 26.7442 5.62911C25.8087 4.63026 24.5696 3.96821 23.2193 3.74574C21.869 3.52327 20.483 3.75283 19.2765 4.39878C18.07 5.04473 17.1105 6.07093 16.5471 7.31805C15.9836 8.56517 15.8476 9.96344 16.1602 11.2958C13.6904 11.1718 11.2743 10.5298 9.06874 9.41165C6.86314 8.29346 4.9173 6.72399 3.35751 4.80511C2.82418 5.72511 2.51751 6.79178 2.51751 7.92778C2.51692 8.95044 2.76876 9.95743 3.25068 10.8594C3.73261 11.7614 4.42973 12.5305 5.28018 13.0984C4.29388 13.0671 3.32934 12.8006 2.46685 12.3211V12.4011C2.46675 13.8354 2.96289 15.2256 3.87109 16.3358C4.77929 17.4459 6.04361 18.2077 7.44951 18.4918C6.53456 18.7394 5.5753 18.7759 4.64418 18.5984C5.04084 19.8326 5.81351 20.9118 6.854 21.685C7.8945 22.4582 9.15073 22.8867 10.4468 22.9104C8.24662 24.6377 5.52936 25.5746 2.73218 25.5704C2.23669 25.5706 1.74161 25.5416 1.24951 25.4838C4.08881 27.3093 7.39397 28.2782 10.7695 28.2744C22.1962 28.2744 28.4428 18.8104 28.4428 10.6024C28.4428 10.3358 28.4362 10.0664 28.4242 9.79978C29.6392 8.92108 30.6881 7.83297 31.5215 6.58644L31.5242 6.58244Z" fill="#97A6BA" />
  </svg>,
  <svg key={2} width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clip-path="url(#clip0_867_11689)">
      <path d="M27.0895 5.98914C25.0495 5.06914 22.8628 4.38914 20.5762 4.00247C20.5558 3.99856 20.5347 4.00108 20.5158 4.00968C20.497 4.01828 20.4812 4.03253 20.4708 4.05047C20.1908 4.54247 19.8788 5.1838 19.6602 5.69047C17.2349 5.32812 14.7694 5.32812 12.3442 5.69047C12.1006 5.12895 11.8259 4.58143 11.5215 4.05047C11.5112 4.03231 11.4956 4.01774 11.4767 4.00868C11.4579 3.99963 11.4368 3.99653 11.4162 3.9998C9.13082 4.38647 6.94415 5.06647 4.90282 5.9878C4.88526 5.99517 4.87037 6.00773 4.86015 6.0238C0.710819 12.1238 -0.426514 18.0731 0.132153 23.9478C0.133707 23.9622 0.138173 23.9761 0.145279 23.9887C0.152385 24.0013 0.161982 24.0124 0.173486 24.0211C2.59534 25.7844 5.2966 27.1276 8.16415 27.9945C8.18414 28.0006 8.20552 28.0006 8.2255 27.9944C8.24548 27.9882 8.26313 27.9762 8.27615 27.9598C8.89215 27.1331 9.44149 26.2598 9.91082 25.3425C9.93882 25.2891 9.91215 25.2251 9.85615 25.2038C8.99483 24.8794 8.16027 24.488 7.36015 24.0331C7.34578 24.0249 7.33366 24.0133 7.3249 23.9992C7.31613 23.9852 7.31099 23.9692 7.30993 23.9527C7.30887 23.9362 7.31193 23.9196 7.31884 23.9046C7.32574 23.8895 7.33627 23.8764 7.34949 23.8665C7.51749 23.7425 7.68549 23.6131 7.84549 23.4838C7.85989 23.4722 7.87724 23.4648 7.8956 23.4624C7.91396 23.4601 7.93262 23.4628 7.94949 23.4705C13.1855 25.8225 18.8562 25.8225 24.0308 23.4705C24.0477 23.4624 24.0666 23.4592 24.0852 23.4614C24.1038 23.4635 24.1215 23.4708 24.1362 23.4825C24.2962 23.6131 24.4628 23.7425 24.6322 23.8665C24.6455 23.8762 24.6562 23.8892 24.6633 23.9041C24.6704 23.919 24.6738 23.9354 24.673 23.952C24.6722 23.9685 24.6673 23.9845 24.6588 23.9987C24.6503 24.0129 24.6384 24.0247 24.6242 24.0331C23.8268 24.4918 22.9975 24.8798 22.1268 25.2025C22.1134 25.2073 22.1013 25.215 22.0911 25.2249C22.0809 25.2348 22.073 25.2468 22.0678 25.2601C22.0626 25.2733 22.0603 25.2875 22.0611 25.3017C22.0618 25.316 22.0656 25.3298 22.0722 25.3425C22.5522 26.2585 23.1015 27.1305 23.7055 27.9585C23.718 27.9755 23.7355 27.9882 23.7556 27.9948C23.7756 28.0015 23.7972 28.0019 23.8175 27.9958C26.69 27.1313 29.3956 25.7875 31.8202 24.0211C31.832 24.0129 31.8419 24.0022 31.8493 23.9897C31.8566 23.9773 31.8612 23.9635 31.8628 23.9491C32.5295 17.1571 30.7455 11.2558 27.1308 6.02647C27.122 6.00947 27.1073 5.99623 27.0895 5.98914ZM10.6935 20.3705C9.11749 20.3705 7.81749 18.9451 7.81749 17.1971C7.81749 15.4478 9.09215 14.0238 10.6935 14.0238C12.3068 14.0238 13.5948 15.4598 13.5695 17.1971C13.5695 18.9465 12.2948 20.3705 10.6935 20.3705ZM21.3268 20.3705C19.7495 20.3705 18.4508 18.9451 18.4508 17.1971C18.4508 15.4478 19.7242 14.0238 21.3268 14.0238C22.9402 14.0238 24.2282 15.4598 24.2028 17.1971C24.2028 18.9465 22.9415 20.3705 21.3268 20.3705Z" fill="#97A6BA" />
    </g>
    <defs>
      <clipPath id="clip0_867_11689">
        <rect width="32" height="32" fill="white" />
      </clipPath>
    </defs>
  </svg>
  ,
  <svg key={3} width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M1.6001 3.91661C1.6001 3.3021 1.84421 2.71276 2.27873 2.27824C2.71325 1.84372 3.30259 1.59961 3.91709 1.59961H27.0139C27.3184 1.59912 27.6201 1.65869 27.9016 1.77492C28.183 1.89115 28.4388 2.06176 28.6543 2.27698C28.8697 2.4922 29.0406 2.7478 29.1572 3.02915C29.2737 3.3105 29.3336 3.61208 29.3334 3.91661V27.0134C29.3338 27.318 29.274 27.6197 29.1577 27.9012C29.0413 28.1827 28.8706 28.4384 28.6552 28.6539C28.4399 28.8693 28.1842 29.0402 27.9028 29.1567C27.6214 29.2732 27.3198 29.3331 27.0152 29.3329H3.91709C3.61271 29.3329 3.31132 29.273 3.03013 29.1565C2.74893 29.0399 2.49345 28.8692 2.27828 28.6539C2.06311 28.4386 1.89247 28.183 1.77611 27.9018C1.65974 27.6205 1.59993 27.3191 1.6001 27.0147V3.91661ZM12.5775 12.1736H16.3328V14.0594C16.8749 12.9753 18.2615 11.9996 20.3453 11.9996C24.3402 11.9996 25.2869 14.159 25.2869 18.1211V25.4604H21.2441V19.0237C21.2441 16.7672 20.7021 15.494 19.3255 15.494C17.4157 15.494 16.6215 16.8668 16.6215 19.0237V25.4604H12.5775V12.1736ZM5.64412 25.2877H9.68815V11.9996H5.64412V25.2864V25.2877ZM10.2668 7.66565C10.2744 8.0119 10.2128 8.35619 10.0855 8.67831C9.9583 9.00043 9.76801 9.29389 9.52582 9.54147C9.28363 9.78905 8.99443 9.98576 8.67519 10.1201C8.35595 10.2544 8.0131 10.3235 7.66677 10.3235C7.32043 10.3235 6.97758 10.2544 6.65834 10.1201C6.3391 9.98576 6.0499 9.78905 5.80771 9.54147C5.56552 9.29389 5.37523 9.00043 5.24799 8.67831C5.12075 8.35619 5.05914 8.0119 5.06676 7.66565C5.08173 6.986 5.36223 6.33923 5.8482 5.86385C6.33416 5.38847 6.98695 5.12227 7.66677 5.12227C8.34658 5.12227 8.99937 5.38847 9.48533 5.86385C9.9713 6.33923 10.2518 6.986 10.2668 7.66565Z" fill="#97A6BA" />
  </svg>
  ,
  <svg key={4} width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M15.9962 11.1981C13.3521 11.1981 11.1943 13.3559 11.1943 16.0001C11.1943 18.6443 13.3521 20.8021 15.9962 20.8021C18.6404 20.8021 20.7982 18.6443 20.7982 16.0001C20.7982 13.3559 18.6404 11.1981 15.9962 11.1981ZM30.3985 16.0001C30.3985 14.0116 30.4165 12.041 30.3048 10.0561C30.1932 7.75052 29.6672 5.70434 27.9813 4.0184C26.2918 2.32886 24.2493 1.80651 21.9437 1.69483C19.9552 1.58316 17.9847 1.60117 15.9998 1.60117C14.0113 1.60117 12.0408 1.58316 10.0559 1.69483C7.75041 1.80651 5.70427 2.33246 4.01836 4.0184C2.32885 5.70794 1.8065 7.75052 1.69483 10.0561C1.58316 12.0446 1.60117 14.0152 1.60117 16.0001C1.60117 17.985 1.58316 19.9592 1.69483 21.9441C1.8065 24.2497 2.33245 26.2959 4.01836 27.9818C5.70787 29.6713 7.75041 30.1937 10.0559 30.3054C12.0444 30.417 14.0149 30.399 15.9998 30.399C17.9883 30.399 19.9588 30.417 21.9437 30.3054C24.2493 30.1937 26.2954 29.6677 27.9813 27.9818C29.6708 26.2922 30.1932 24.2497 30.3048 21.9441C30.4201 19.9592 30.3985 17.9886 30.3985 16.0001ZM15.9962 23.3887C11.9075 23.3887 8.60777 20.0889 8.60777 16.0001C8.60777 11.9113 11.9075 8.61151 15.9962 8.61151C20.0849 8.61151 23.3847 11.9113 23.3847 16.0001C23.3847 20.0889 20.0849 23.3887 15.9962 23.3887ZM23.6873 10.0345C22.7327 10.0345 21.9617 9.26355 21.9617 8.3089C21.9617 7.35426 22.7327 6.58334 23.6873 6.58334C24.6419 6.58334 25.4128 7.35426 25.4128 8.3089C25.4131 8.53559 25.3687 8.7601 25.282 8.96958C25.1954 9.17907 25.0683 9.3694 24.9081 9.5297C24.7478 9.68999 24.5574 9.81708 24.348 9.9037C24.1385 9.99031 23.914 10.0348 23.6873 10.0345Z" fill="#97A6BA" />
  </svg>
];
const LightFooter = () => {
  const [footerData, setFooterData] = useState([]);
  const [isMobile, setIsMobile] = useState(false);
  const [email, setEmail] = useState('');

  const setDimension = () => {
    const ismobile = window.innerWidth < 595;
    if (ismobile !== isMobile) setIsMobile(ismobile);
  };

  useEffect(() => {
    window.addEventListener('resize', setDimension, false);

    return () => {
      window.removeEventListener('resize', setDimension);
    };
  }, [isMobile]);

  useEffect(() => {
    fetch(
      `${process.env.NEXT_PUBLIC_API_URL}/api/footer?populate[0]=socialMediaLinks.logo&populate[1]=logo`
    )
      .then((res) => res.json())
      .then((data) => setFooterData(data?.data?.attributes));
  }, []);

  const onSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch(
        `https://api.mailmodo.com/api/v1/addToList`,
        {
          method: 'POST',
          headers: {
            mmApiKey: '0KTN04A-GKMMYZ4-N5H45E1-MMJ01TC',
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            email,
            listName: 'email subscribers',
          }),
        }
      );
      toast.success("Thank you for submitting, you'll receive it soon!", {
        position: 'top-center',
        autoClose: 5000,
        closeOnClick: true,
      });
      // console.log('Completed!', response);
    } catch (err) {
      toast.error(err, {
        position: 'top-center',
        autoClose: 5000,
        closeOnClick: true,
      });
      console.error(`Error: ${err}`);
    }
    setEmail('');
  };

  return (
    <Container className="section">
      <div className="section-center">
        <article className="footer-icons">
          <div className="logo">
            <Link href="/">
              <a>
                <Image
                  src={footerData?.logo?.data?.attributes?.url}
                  alt="logo"
                  width={isMobile ? 104 : 150}
                  height={isMobile ? 20 : 28}
                  placeholder="blur"
                  blurDataURL={footerData?.logo?.data?.attributes?.url}
                />
              </a>
            </Link>
          </div>
          <div className="social-icons">
            <div className="icons">
              {footerData?.socialMediaLinks?.map((socialMediaLink, id) => {
                return (
                  <a
                    key={socialMediaLink?.id}
                    href={socialMediaLink?.link}
                    target="_blank"
                    rel="noreferrer"
                  >

                    {socialMediaIcons[id]}
                  </a>
                );
              })}
            </div>

            <p style={{ color: "#97A6BA" }}>Copyright &copy; DaoLens</p>
          </div>
        </article>

        <article className="footer-form">
          <p style={{ color: "#64748B" }}>{footerData?.subscribeHeading}</p>
          <form
            method="post"
            action="https://api.mailmodo.com/api/v1/addToList"
            onSubmit={onSubmit}
          >
            <input
              required
              type="email"
              placeholder="Enter your Email Address"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
            <button type="submit" className="btn">
              {footerData?.subscribeCTAText}
            </button>
          </form>
        </article>
      </div>
    </Container>
  );
};

export const Container = styled.section`
  background: url('${pattern.src}') white center;
  background-size:105%;

  .section-center {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 3rem;
  }

  .icons {
    margin-top: 3rem;
    display: flex;
    gap: 1rem;

    @media (max-width: 592px) {
      margin-top: 1rem;
    }
  }

  .social-icons p {
    margin-top: 0.75rem;
    margin-bottom: 0;
  }

  .footer-form {
    align-self: flex-end;

    p {
      margin-bottom: 1rem;
    }

    form {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    input {
      width: 320px;
      height: 48px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(5px);
      border-radius: 90px;
      border: 1px solid #E2E8F0;
      padding: 14px 20px;
      &::placeholder {
        font-style: normal;
        font-weight: 400;
        font-size: 16px;
        line-height: 24px;
      }

      @media (max-width: 592px) {
        width: 100%;
      }
    }

    .btn {
      height: 48px;
    }
  }
`;

export default LightFooter;
